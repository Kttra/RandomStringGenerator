/*
    Program created to generate random numbers and random strings.
    
    In this program we look at the limitations of integers and how strings
    could be used as a work around if we are looking to print out the value
    to the user.
*/

#include <iostream>
#include <math.h>  /* pow */
#include <stdlib.h>
#include <time.h> //time()

using namespace std;

int generateNum(int digitSize);
string generateStrNum(int digitSize);
string generateString(int digitSize);
int getInput();

int main(){
    int digitSize = 0;
    
    //If random numbers are generated with rand() without first calling srand(), your program will create the same sequence of numbers each time it runs.
    srand(time(0));
    
    
    //Using the rand function where the values range from 1 to digitSize
    cout << "Enter the highest you want your number to be (rand function): ";
    digitSize = getInput(); //cin >> digitSize; <- using cin means we would assume user puts in valid input
    cout << "Random number generated by the rand function: " << rand()%digitSize+1 << endl << endl;
    
    //Max number of digits is 10 because an integer in C++ can only go to int : -2147483648 to 2147483647
    cout << "Enter how long you want the number to be (addition of numbers): ";
    digitSize = getInput();
    cout << "Random number generated by adding integers together: " << generateNum(digitSize) << endl << endl;
    
    //Adding string values together
    cout << "Enter how long you want the next number to be (string made from integers): ";
    digitSize = getInput();
    string num = generateStrNum(digitSize);
    cout << "Random number generated by string generator: " << num << endl << endl;
    
    //Creating a random string made up of letters
    cout << "Enter how long you want your string to be (string made from letters): ";
    digitSize = getInput();
    num = generateString(digitSize);
    cout << "Random string generated by string generator: " << num << endl << endl;

    //Waiting for user input to end the program
    cout << "Press enter to end the program... ";
    string nothing;
    getline(cin, nothing);
    
    return 0;
}

//Loops until we receive valid input
int getInput(){
    string theInput;
    int inputAsInt;

    getline(cin, theInput);

    //If we don't get the correct input, repeat
    while(cin.fail() || cin.eof() || theInput.find_first_not_of("0123456789") != string::npos) {
        cout << "Invalid Input. Try again: ";

        //Searches the string for the first character that does not match any of the characters
        //specified in its arguments.
        if(theInput.find_first_not_of("0123456789") == string::npos) {
            cin.clear();
            cin.ignore(256,'\n');
        }
        getline(cin, theInput);
    }

    //Convert to integer
    string::size_type st;
    inputAsInt = stoi(theInput,&st);

    return inputAsInt;
}

//Generates a random number that has digitSize digits
int generateNum(int digitSize){
    int result = 0;
	
	for (double digitIndex = 0; digitIndex < digitSize; digitIndex++) {
		int curDigit = rand() % 10;
		curDigit *= pow(10, digitIndex);
		result += curDigit;
	}
	
	return result;
}

//Generates a string made up of random numbers
string generateStrNum(int digitSize){
    string result = "";
	
	for (double digitIndex = 0; digitIndex < digitSize; digitIndex++) {
		int curDigit = rand() % 10;
		result += to_string(curDigit);
	}
	
	return result;
}

//Generates a string made up of letters
string generateString(int digitSize){
    string word = "";
    int index = 0;
    string letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
    //0123456789 can add numbers to the letters string if we want
	
	for(int i = 0; i < digitSize; i++){
		index = rand()%(52);
        word += letters[index];
	}
	
	return word;
}
